{"trial_id": "0001", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_features", "default": null, "conditions": [], "min_value": 10, "max_value": 20, "step": 2, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "rmsprop"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "init_type", "default": "glorot_uniform", "conditions": [], "values": ["glorot_uniform", "he_uniform"], "ordered": false}}], "values": {"num_features": 20, "optimizer": "adam", "init_type": "glorot_uniform", "tuner/epochs": 3, "tuner/initial_epoch": 0, "tuner/bracket": 2, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\aluru\\anaconda3\\New folder\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\aluru\\anaconda3\\New folder\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\aluru\\anaconda3\\New folder\\Lib\\site-packages\\keras_tuner\\src\\tuners\\hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\aluru\\anaconda3\\New folder\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\aluru\\anaconda3\\New folder\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\aluru\\anaconda3\\New folder\\Lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\aluru\\anaconda3\\New folder\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\aluru\\anaconda3\\New folder\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 124, in error_handler\n    del filtered_tb\n        ^^^^^^^^^^^\nValueError: Exception encountered when calling LSTMCell.call().\n\n\u001b[1mDimensions must be equal, but are 12 and 20 for '{{node sequential_1/lstm_1/lstm_cell_1/MatMul}} = MatMul[T=DT_FLOAT, grad_a=false, grad_b=false, transpose_a=false, transpose_b=false](sequential_1/lstm_1/strided_slice_2, sequential_1/lstm_1/lstm_cell_1/Cast/ReadVariableOp)' with input shapes: [?,12], [20,80].\u001b[0m\n\nArguments received by LSTMCell.call():\n  \u2022 inputs=tf.Tensor(shape=(None, 12), dtype=float32)\n  \u2022 states=('tf.Tensor(shape=(None, 20), dtype=float32)', 'tf.Tensor(shape=(None, 20), dtype=float32)')\n  \u2022 training=True\n"}